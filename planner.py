import asyncio
import danger_statistic


class TaskPlanner:
    def __init__(self, process_analysis, process_connection, time_check_conn=10, time_check_proc=1, time_overwrite=15):
        self.time_check_conn = time_check_conn
        self.time_check_proc = time_check_proc
        self.time_overwrite = time_overwrite
        self.pa = process_analysis
        self.pc = process_connection

    def run(self):
        loop = asyncio.get_event_loop()
        loop.create_task(self.__check_connection())
        loop.create_task(self.__check_process())
        loop.create_task(self.__overwriting_danger())
        loop.run_forever()

    async def __check_connection(self):
        while True:
            print('[start check new connection]')
            try:
                self.pc.check_new_connection()
            finally:
                print('[finish check new connection]')
                await asyncio.sleep(self.time_check_conn)

    async def __check_process(self):
        while True:
            print('[check new process]')
            try:
                self.pa.check_new_process()
            finally:
                print('[finish check process]')
                await asyncio.sleep(self.time_check_proc)

    async def __overwriting_danger(self):
        while True:
            print('[danger recalculation]')
            await asyncio.sleep(self.time_overwrite)

