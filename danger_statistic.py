import tabulate

# for each pid stores the number of suspicious activities
danger_statistic = {}


def add(pid, processStatisticInfo):
    if pid in danger_statistic.keys():
        processStatisticInfo.ip_check_point = danger_statistic[pid].ip_check_point
        danger_statistic[pid] = processStatisticInfo
    else:
        danger_statistic[pid] = processStatisticInfo
    overwriting()


def add_ip_point(pid, ip_point):
    if pid in danger_statistic.keys():
        danger_statistic[pid].add_ip_check_point(ip_point)
    else:
        danger_statistic[pid] = ProcessStatisticInfo(pid=pid, filename='')


def overwriting():
    f = open('danger.statistics', 'w')
    pids = [item.pid for item in danger_statistic.values()]

    result = []
    for pid in pids:
        process_statistic_info = danger_statistic[pid]
        result.append(process_statistic_info.get_row())

    table = tabulate.tabulate(result, headers=["PID", "Filename", "Has valid cert", "Has PEID sign", "WX Sections",
                                               "Exe diff point",
                                               "Mitre point", "IP check point"])
    f.write(table)
    print('Write to table')
    f.close()


class ProcessStatisticInfo:

    def __init__(self, pid, filename):
        self.pid = pid
        self.filename = filename
        self.has_valid_cert = False
        self.has_peid = False
        self.wx_section = []
        self.exe_diff_point = 0
        self.mitre_point = 0
        self.ip_check_point = 0

    def set_has_valid_cert(self, value):
        self.has_valid_cert = value

    def set_has_peid(self, value):
        self.has_peid = value

    def set_wx_section(self, value):
        self.wx_section.append(value)

    def set_exe_diff_point(self, value):
        self.exe_diff_point = value

    def set_mitre_point(self, value):
        self.mitre_point = value

    def add_ip_check_point(self, value):
        self.ip_check_point += value

    def get_row(self):
        return [self.pid, self.filename, self.has_valid_cert, self.has_peid, self.wx_section, self.exe_diff_point,
                self.mitre_point, self.ip_check_point]
